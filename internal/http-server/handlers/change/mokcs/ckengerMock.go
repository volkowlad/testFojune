// Code generated by MockGen. DO NOT EDIT.
// Source: change.go

// Package mock_change is a generated GoMock package.
package mock_change

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockChangerWallet is a mock of ChangerWallet interface.
type MockChangerWallet struct {
	ctrl     *gomock.Controller
	recorder *MockChangerWalletMockRecorder
}

// MockChangerWalletMockRecorder is the mock recorder for MockChangerWallet.
type MockChangerWalletMockRecorder struct {
	mock *MockChangerWallet
}

// NewMockChangerWallet creates a new mock instance.
func NewMockChangerWallet(ctrl *gomock.Controller) *MockChangerWallet {
	mock := &MockChangerWallet{ctrl: ctrl}
	mock.recorder = &MockChangerWalletMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChangerWallet) EXPECT() *MockChangerWalletMockRecorder {
	return m.recorder
}

// ChangeWallet mocks base method.
func (m *MockChangerWallet) ChangeWallet(ctx context.Context, amount int, uuid, action string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeWallet", ctx, amount, uuid, action)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ChangeWallet indicates an expected call of ChangeWallet.
func (mr *MockChangerWalletMockRecorder) ChangeWallet(ctx, amount, uuid, action interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeWallet", reflect.TypeOf((*MockChangerWallet)(nil).ChangeWallet), ctx, amount, uuid, action)
}
